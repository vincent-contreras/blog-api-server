services:
  # web-dev:
  #   build:
  #     context: .
  #     args:
  #       RAILS_ENV: development
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - .:/rails
  #     - /rails/tmp
  #   environment:
  #     - RAILS_ENV=development
  #     - DATABASE_URL=mysql2://${DB_USER}:${DB_PASSWORD}@db:3306/${DB_NAME}
  #   depends_on:
  #     - db
  #   command: bin/rails server -b 0.0.0.0 --watch

  # web-prod:
  #   build:
  #     context: .
  #     args:
  #       RAILS_ENV: production
  #   ports:
  #     - "80:80"
  #   environment:
  #     - RAILS_ENV=production
  #     - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
  #   depends_on:
  #     - db

  db:
    container_name: db
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      TZ: Asia/Seoul
    ports:
      - '${DB_PORT}:5432'
    expose:
      - $DB_PORT
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER}']
      interval: 10s
      timeout: 10s
      retries: 6
      start_period: 30s
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d

volumes:
  db_data:
